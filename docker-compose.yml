version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: codeacher-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: codeacher
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/data.sql:/docker-entrypoint-initdb.d/data.sql
    networks:
      - codeacher-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d codeacher"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 나중에 백엔드도 도커라이징 하려면 아래 주석을 해제하세요
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: codeacher-backend
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - DB_USERNAME=${DB_USERNAME:-postgres}
  #     - DB_PASSWORD=${DB_PASSWORD:-postgres}
  #     - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
  #     - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
  #     - JWT_SECRET=${JWT_SECRET}
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - codeacher-network

volumes:
  postgres_data:
    driver: local

networks:
  codeacher-network:
    driver: bridge

