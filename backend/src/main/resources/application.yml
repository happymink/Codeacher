spring:
  application:
    name: codeacher

  datasource:
    url: jdbc:postgresql://localhost:5432/codeacher
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_batch_fetch_size: 100
    open-in-view: false
  
  sql:
    init:
      mode: always
      encoding: UTF-8

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:dummy-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:dummy-client-secret}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"

# JWT 설정
jwt:
  secret: ${JWT_SECRET:codeacher-secret-key-change-this-in-production-please-make-it-very-long}
  expiration: 86400000  # 24시간 (밀리초)

# OpenAI API 설정
openai:
  api-key: ${OPENAI_API_KEY:dummy-openai-key}
  model: ${OPENAI_MODEL:gpt-3.5-turbo}  # gpt-4는 별도 승인 필요, gpt-3.5-turbo 권장
  max-tokens: 2000
  temperature: 0.7
  use-mock: ${OPENAI_USE_MOCK:false}  # true: Mock 피드백 사용 (무료), false: 실제 OpenAI API 사용 (유료)

# CORS 설정
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:8080}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# 로깅 설정
logging:
  level:
    com.codeacher: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# 서버 설정
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always


